// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TextField /> rendered correctly with Default fixture 1`] = `
<TextField
  disabled={false}
  helper={null}
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value=""
  verified={
    <div>
      Verify
    </div>
  }
>
  <div
    className="outer hasVerified"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <label
        className="label"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
    <div
      className="verified"
    >
      <div>
        Verify
      </div>
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with Disabled fixture 1`] = `
<TextField
  disabled={false}
  helper={null}
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value=""
  verified={
    <div>
      Verify
    </div>
  }
>
  <div
    className="outer hasVerified"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <label
        className="label"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
    <div
      className="verified"
    >
      <div>
        Verify
      </div>
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with Error fixture 1`] = `
<TextField
  disabled={false}
  helper={null}
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value=""
  verified={
    <div>
      Verify
    </div>
  }
>
  <div
    className="outer hasVerified"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <label
        className="label"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
    <div
      className="verified"
    >
      <div>
        Verify
      </div>
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with InvalidMarker fixture 1`] = `
<TextField
  disabled={false}
  helper={null}
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value=""
  verified={
    <div>
      Verify
    </div>
  }
>
  <div
    className="outer hasVerified"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <label
        className="label"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
    <div
      className="verified"
    >
      <div>
        Verify
      </div>
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with ValidMarker fixture 1`] = `
<TextField
  disabled={false}
  helper={null}
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value=""
  verified={
    <div>
      Verify
    </div>
  }
>
  <div
    className="outer hasVerified"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <label
        className="label"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
    <div
      className="verified"
    >
      <div>
        Verify
      </div>
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with Value fixture 1`] = `
<TextField
  disabled={false}
  helper={null}
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value=""
  verified={
    <div>
      Verify
    </div>
  }
>
  <div
    className="outer hasVerified"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <label
        className="label"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
    <div
      className="verified"
    >
      <div>
        Verify
      </div>
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with With helper fixture 1`] = `
<TextField
  disabled={false}
  helper={null}
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value=""
  verified={
    <div>
      Verify
    </div>
  }
>
  <div
    className="outer hasVerified"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <label
        className="label"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
    <div
      className="verified"
    >
      <div>
        Verify
      </div>
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with With verified fixture 1`] = `
<TextField
  disabled={false}
  helper={null}
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value=""
  verified={
    <div>
      Verify
    </div>
  }
>
  <div
    className="outer hasVerified"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <label
        className="label"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
    <div
      className="verified"
    >
      <div>
        Verify
      </div>
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with noLabel fixture 1`] = `
<TextField
  disabled={false}
  helper={null}
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value=""
  verified={
    <div>
      Verify
    </div>
  }
>
  <div
    className="outer hasVerified"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <label
        className="label"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
    <div
      className="verified"
    >
      <div>
        Verify
      </div>
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with password fixture 1`] = `
<TextField
  disabled={false}
  helper={null}
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value=""
  verified={
    <div>
      Verify
    </div>
  }
>
  <div
    className="outer hasVerified"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <label
        className="label"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
    <div
      className="verified"
    >
      <div>
        Verify
      </div>
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with small fixture 1`] = `
<TextField
  disabled={false}
  helper={null}
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value=""
  verified={
    <div>
      Verify
    </div>
  }
>
  <div
    className="outer hasVerified"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <label
        className="label"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
    <div
      className="verified"
    >
      <div>
        Verify
      </div>
    </div>
  </div>
</TextField>
`;

exports[`<TextField /> rendered correctly with smallNoLabel fixture 1`] = `
<TextField
  disabled={false}
  helper={null}
  id="demo"
  inline={false}
  isValid={true}
  label="First Name"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  value=""
  verified={
    <div>
      Verify
    </div>
  }
>
  <div
    className="outer hasVerified"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <label
        className="label"
        htmlFor="demo"
      >
        First Name
      </label>
    </div>
    <div
      className="verified"
    >
      <div>
        Verify
      </div>
    </div>
  </div>
</TextField>
`;

exports[`TextField test interaction 1`] = `
<TextField
  disabled={false}
  helper={null}
  id="demo"
  inline={false}
  isValid={true}
  label="Label"
  marker={false}
  name="demo"
  onBlur={[Function]}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "props": Object {
              "disabled": false,
              "helper": null,
              "id": "demo",
              "inline": false,
              "isValid": true,
              "label": "Label",
              "marker": false,
              "name": "demo",
              "onBlur": [Function],
              "onChange": [MockFunction] {
                "calls": [Circular],
              },
              "onFocus": [Function],
              "value": "",
              "verified": null,
            },
            "value": "",
          },
        ],
      ],
    }
  }
  onFocus={[Function]}
  value=""
  verified={null}
>
  <div
    className="outer"
  >
    <div
      className="block"
    >
      <input
        className="input"
        disabled={false}
        id="demo"
        name="demo"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <label
        className="label"
        htmlFor="demo"
      >
        Label
      </label>
    </div>
  </div>
</TextField>
`;
