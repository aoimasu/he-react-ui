// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<withRouter(SubNavigation) /> rendered correctly with Has back button fixture 1`] = `
<withRouter(SubNavigation)
  backRoute="/feedback"
  item={
    Object {
      "badge": "FREE",
      "items": Array [
        Object {
          "key": "MAIN",
          "label": "Main",
          "route": "/parent",
        },
        Object {
          "key": "SECONDARY",
          "label": "Secondary",
          "route": "/parent/secondary",
        },
        Object {
          "key": "TERTIARY",
          "label": "Google",
          "route": "https://wwww.google.com/",
        },
      ],
      "key": "PARENT",
      "label": "Parent",
      "route": "/parent",
      "title": "Parent title",
    }
  }
  locations={
    Array [
      Object {
        "label": "Location A",
        "value": "Location A",
      },
    ]
  }
  logoutRoute="/logout"
>
  <Route
    render={[Function]}
  >
    <SubNavigation
      backRoute="/feedback"
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "mocked",
              "pathname": "/feedback",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "mocked",
            "pathname": "/feedback",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      item={
        Object {
          "badge": "FREE",
          "items": Array [
            Object {
              "key": "MAIN",
              "label": "Main",
              "route": "/parent",
            },
            Object {
              "key": "SECONDARY",
              "label": "Secondary",
              "route": "/parent/secondary",
            },
            Object {
              "key": "TERTIARY",
              "label": "Google",
              "route": "https://wwww.google.com/",
            },
          ],
          "key": "PARENT",
          "label": "Parent",
          "route": "/parent",
          "title": "Parent title",
        }
      }
      loading={false}
      location={
        Object {
          "hash": "",
          "key": "mocked",
          "pathname": "/feedback",
          "search": "",
          "state": undefined,
        }
      }
      locations={
        Array [
          Object {
            "label": "Location A",
            "value": "Location A",
          },
        ]
      }
      logoutRoute="/logout"
      match={
        Object {
          "isExact": false,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
    >
      <div
        className="bar"
      >
        <div
          className="top"
        >
          <div
            className="heading"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="navBack"
              exact={true}
              to="/feedback"
            >
              <Route
                exact={true}
                path="/feedback"
              >
                <Link
                  aria-current="true"
                  className="navBack active"
                  replace={false}
                  style={Object {}}
                  to="/feedback"
                >
                  <a
                    aria-current="true"
                    className="navBack active"
                    href="/feedback"
                    onClick={[Function]}
                    style={Object {}}
                  >
                    <ArrowLeft
                      className="arrow"
                      fill="currentColor"
                      height={32}
                      width={32}
                    >
                      <svg
                        className="arrow"
                        fill="currentColor"
                        height={32}
                        viewBox="0 0 24 24"
                        width={32}
                      >
                        <path
                          d="M5.414 13H21a1 1 0 1 0 0-2H5.414l4.293-4.293a1 1 0 1 0-1.414-1.414l-6 6a1 1 0 0 0 0 1.414l6 6a1 1 0 0 0 1.414-1.414L5.414 13z"
                        />
                      </svg>
                    </ArrowLeft>
                  </a>
                </Link>
              </Route>
            </NavLink>
            <h2
              className="heading"
            >
              Parent title
            </h2>
          </div>
          <span
            className="control"
          >
            Location A
          </span>
          <span
            className="control logout"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="navLink"
              key="logout"
              target="_self"
              title="Logout"
              to="/logout"
            >
              <Route
                path="/logout"
              >
                <Link
                  aria-current={false}
                  className="navLink"
                  replace={false}
                  target="_self"
                  title="Logout"
                  to="/logout"
                >
                  <a
                    aria-current={false}
                    className="navLink"
                    href="/logout"
                    onClick={[Function]}
                    target="_self"
                    title="Logout"
                  >
                    <Logout
                      className="icon"
                      fill="currentColor"
                      height={32}
                      width={32}
                    >
                      <svg
                        className="icon"
                        fill="currentColor"
                        height={32}
                        viewBox="0 1 16 16"
                        width={32}
                      >
                        <path
                          d="M7.5 1.666c-.823 0-1.5.677-1.5 1.5v3h1v-3c0-.281.219-.5.5-.5h7c.281 0 .5.219.5.5v12c0 .281-.219.5-.5.5h-7a.493.493 0 0 1-.5-.5v-3H6v3c0 .823.677 1.5 1.5 1.5h7c.823 0 1.5-.677 1.5-1.5v-12c0-.823-.677-1.5-1.5-1.5h-7zM3.146 5.813L-.207 9.165l3.353 3.354.708-.707-2.147-2.147H11.5v-1H1.707L3.854 6.52l-.708-.707z"
                        />
                      </svg>
                    </Logout>
                    Logout
                  </a>
                </Link>
              </Route>
            </NavLink>
          </span>
        </div>
        <div
          className="items"
        >
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="MAIN"
            title="Main"
            to="/parent"
          >
            <Route
              exact={true}
              path="/parent"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Main"
                to="/parent"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent"
                  onClick={[Function]}
                  title="Main"
                >
                  <span>
                    Main
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="SECONDARY"
            title="Secondary"
            to="/parent/secondary"
          >
            <Route
              exact={true}
              path="/parent/secondary"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Secondary"
                to="/parent/secondary"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent/secondary"
                  onClick={[Function]}
                  title="Secondary"
                >
                  <span>
                    Secondary
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
          <a
            className="item"
            href="https://wwww.google.com/"
            key="TERTIARY"
            target="_blank"
          >
            <span>
              Google
            </span>
          </a>
        </div>
      </div>
    </SubNavigation>
  </Route>
</withRouter(SubNavigation)>
`;

exports[`<withRouter(SubNavigation) /> rendered correctly with OnePracticeWithChildren fixture 1`] = `
<withRouter(SubNavigation)
  backRoute="/feedback"
  item={
    Object {
      "badge": "FREE",
      "items": Array [
        Object {
          "key": "MAIN",
          "label": "Main",
          "route": "/parent",
        },
        Object {
          "key": "SECONDARY",
          "label": "Secondary",
          "route": "/parent/secondary",
        },
        Object {
          "key": "TERTIARY",
          "label": "Google",
          "route": "https://wwww.google.com/",
        },
      ],
      "key": "PARENT",
      "label": "Parent",
      "route": "/parent",
      "title": "Parent title",
    }
  }
  locations={
    Array [
      Object {
        "label": "Location A",
        "value": "Location A",
      },
    ]
  }
  logoutRoute="/logout"
>
  <Route
    render={[Function]}
  >
    <SubNavigation
      backRoute="/feedback"
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "mocked",
              "pathname": "/feedback",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "mocked",
            "pathname": "/feedback",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      item={
        Object {
          "badge": "FREE",
          "items": Array [
            Object {
              "key": "MAIN",
              "label": "Main",
              "route": "/parent",
            },
            Object {
              "key": "SECONDARY",
              "label": "Secondary",
              "route": "/parent/secondary",
            },
            Object {
              "key": "TERTIARY",
              "label": "Google",
              "route": "https://wwww.google.com/",
            },
          ],
          "key": "PARENT",
          "label": "Parent",
          "route": "/parent",
          "title": "Parent title",
        }
      }
      loading={false}
      location={
        Object {
          "hash": "",
          "key": "mocked",
          "pathname": "/feedback",
          "search": "",
          "state": undefined,
        }
      }
      locations={
        Array [
          Object {
            "label": "Location A",
            "value": "Location A",
          },
        ]
      }
      logoutRoute="/logout"
      match={
        Object {
          "isExact": false,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
    >
      <div
        className="bar"
      >
        <div
          className="top"
        >
          <div
            className="heading"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="navBack"
              exact={true}
              to="/feedback"
            >
              <Route
                exact={true}
                path="/feedback"
              >
                <Link
                  aria-current="true"
                  className="navBack active"
                  replace={false}
                  style={Object {}}
                  to="/feedback"
                >
                  <a
                    aria-current="true"
                    className="navBack active"
                    href="/feedback"
                    onClick={[Function]}
                    style={Object {}}
                  >
                    <ArrowLeft
                      className="arrow"
                      fill="currentColor"
                      height={32}
                      width={32}
                    >
                      <svg
                        className="arrow"
                        fill="currentColor"
                        height={32}
                        viewBox="0 0 24 24"
                        width={32}
                      >
                        <path
                          d="M5.414 13H21a1 1 0 1 0 0-2H5.414l4.293-4.293a1 1 0 1 0-1.414-1.414l-6 6a1 1 0 0 0 0 1.414l6 6a1 1 0 0 0 1.414-1.414L5.414 13z"
                        />
                      </svg>
                    </ArrowLeft>
                  </a>
                </Link>
              </Route>
            </NavLink>
            <h2
              className="heading"
            >
              Parent title
            </h2>
          </div>
          <span
            className="control"
          >
            Location A
          </span>
          <span
            className="control logout"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="navLink"
              key="logout"
              target="_self"
              title="Logout"
              to="/logout"
            >
              <Route
                path="/logout"
              >
                <Link
                  aria-current={false}
                  className="navLink"
                  replace={false}
                  target="_self"
                  title="Logout"
                  to="/logout"
                >
                  <a
                    aria-current={false}
                    className="navLink"
                    href="/logout"
                    onClick={[Function]}
                    target="_self"
                    title="Logout"
                  >
                    <Logout
                      className="icon"
                      fill="currentColor"
                      height={32}
                      width={32}
                    >
                      <svg
                        className="icon"
                        fill="currentColor"
                        height={32}
                        viewBox="0 1 16 16"
                        width={32}
                      >
                        <path
                          d="M7.5 1.666c-.823 0-1.5.677-1.5 1.5v3h1v-3c0-.281.219-.5.5-.5h7c.281 0 .5.219.5.5v12c0 .281-.219.5-.5.5h-7a.493.493 0 0 1-.5-.5v-3H6v3c0 .823.677 1.5 1.5 1.5h7c.823 0 1.5-.677 1.5-1.5v-12c0-.823-.677-1.5-1.5-1.5h-7zM3.146 5.813L-.207 9.165l3.353 3.354.708-.707-2.147-2.147H11.5v-1H1.707L3.854 6.52l-.708-.707z"
                        />
                      </svg>
                    </Logout>
                    Logout
                  </a>
                </Link>
              </Route>
            </NavLink>
          </span>
        </div>
        <div
          className="items"
        >
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="MAIN"
            title="Main"
            to="/parent"
          >
            <Route
              exact={true}
              path="/parent"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Main"
                to="/parent"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent"
                  onClick={[Function]}
                  title="Main"
                >
                  <span>
                    Main
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="SECONDARY"
            title="Secondary"
            to="/parent/secondary"
          >
            <Route
              exact={true}
              path="/parent/secondary"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Secondary"
                to="/parent/secondary"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent/secondary"
                  onClick={[Function]}
                  title="Secondary"
                >
                  <span>
                    Secondary
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
          <a
            className="item"
            href="https://wwww.google.com/"
            key="TERTIARY"
            target="_blank"
          >
            <span>
              Google
            </span>
          </a>
        </div>
      </div>
    </SubNavigation>
  </Route>
</withRouter(SubNavigation)>
`;

exports[`<withRouter(SubNavigation) /> rendered correctly with default fixture 1`] = `
<withRouter(SubNavigation)
  backRoute="/feedback"
  item={
    Object {
      "badge": "FREE",
      "items": Array [
        Object {
          "key": "MAIN",
          "label": "Main",
          "route": "/parent",
        },
        Object {
          "key": "SECONDARY",
          "label": "Secondary",
          "route": "/parent/secondary",
        },
        Object {
          "key": "TERTIARY",
          "label": "Google",
          "route": "https://wwww.google.com/",
        },
      ],
      "key": "PARENT",
      "label": "Parent",
      "route": "/parent",
      "title": "Parent title",
    }
  }
  locations={
    Array [
      Object {
        "label": "Location A",
        "value": "Location A",
      },
    ]
  }
  logoutRoute="/logout"
>
  <Route
    render={[Function]}
  >
    <SubNavigation
      backRoute="/feedback"
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "mocked",
              "pathname": "/feedback",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "mocked",
            "pathname": "/feedback",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      item={
        Object {
          "badge": "FREE",
          "items": Array [
            Object {
              "key": "MAIN",
              "label": "Main",
              "route": "/parent",
            },
            Object {
              "key": "SECONDARY",
              "label": "Secondary",
              "route": "/parent/secondary",
            },
            Object {
              "key": "TERTIARY",
              "label": "Google",
              "route": "https://wwww.google.com/",
            },
          ],
          "key": "PARENT",
          "label": "Parent",
          "route": "/parent",
          "title": "Parent title",
        }
      }
      loading={false}
      location={
        Object {
          "hash": "",
          "key": "mocked",
          "pathname": "/feedback",
          "search": "",
          "state": undefined,
        }
      }
      locations={
        Array [
          Object {
            "label": "Location A",
            "value": "Location A",
          },
        ]
      }
      logoutRoute="/logout"
      match={
        Object {
          "isExact": false,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
    >
      <div
        className="bar"
      >
        <div
          className="top"
        >
          <div
            className="heading"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="navBack"
              exact={true}
              to="/feedback"
            >
              <Route
                exact={true}
                path="/feedback"
              >
                <Link
                  aria-current="true"
                  className="navBack active"
                  replace={false}
                  style={Object {}}
                  to="/feedback"
                >
                  <a
                    aria-current="true"
                    className="navBack active"
                    href="/feedback"
                    onClick={[Function]}
                    style={Object {}}
                  >
                    <ArrowLeft
                      className="arrow"
                      fill="currentColor"
                      height={32}
                      width={32}
                    >
                      <svg
                        className="arrow"
                        fill="currentColor"
                        height={32}
                        viewBox="0 0 24 24"
                        width={32}
                      >
                        <path
                          d="M5.414 13H21a1 1 0 1 0 0-2H5.414l4.293-4.293a1 1 0 1 0-1.414-1.414l-6 6a1 1 0 0 0 0 1.414l6 6a1 1 0 0 0 1.414-1.414L5.414 13z"
                        />
                      </svg>
                    </ArrowLeft>
                  </a>
                </Link>
              </Route>
            </NavLink>
            <h2
              className="heading"
            >
              Parent title
            </h2>
          </div>
          <span
            className="control"
          >
            Location A
          </span>
          <span
            className="control logout"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="navLink"
              key="logout"
              target="_self"
              title="Logout"
              to="/logout"
            >
              <Route
                path="/logout"
              >
                <Link
                  aria-current={false}
                  className="navLink"
                  replace={false}
                  target="_self"
                  title="Logout"
                  to="/logout"
                >
                  <a
                    aria-current={false}
                    className="navLink"
                    href="/logout"
                    onClick={[Function]}
                    target="_self"
                    title="Logout"
                  >
                    <Logout
                      className="icon"
                      fill="currentColor"
                      height={32}
                      width={32}
                    >
                      <svg
                        className="icon"
                        fill="currentColor"
                        height={32}
                        viewBox="0 1 16 16"
                        width={32}
                      >
                        <path
                          d="M7.5 1.666c-.823 0-1.5.677-1.5 1.5v3h1v-3c0-.281.219-.5.5-.5h7c.281 0 .5.219.5.5v12c0 .281-.219.5-.5.5h-7a.493.493 0 0 1-.5-.5v-3H6v3c0 .823.677 1.5 1.5 1.5h7c.823 0 1.5-.677 1.5-1.5v-12c0-.823-.677-1.5-1.5-1.5h-7zM3.146 5.813L-.207 9.165l3.353 3.354.708-.707-2.147-2.147H11.5v-1H1.707L3.854 6.52l-.708-.707z"
                        />
                      </svg>
                    </Logout>
                    Logout
                  </a>
                </Link>
              </Route>
            </NavLink>
          </span>
        </div>
        <div
          className="items"
        >
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="MAIN"
            title="Main"
            to="/parent"
          >
            <Route
              exact={true}
              path="/parent"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Main"
                to="/parent"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent"
                  onClick={[Function]}
                  title="Main"
                >
                  <span>
                    Main
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="SECONDARY"
            title="Secondary"
            to="/parent/secondary"
          >
            <Route
              exact={true}
              path="/parent/secondary"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Secondary"
                to="/parent/secondary"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent/secondary"
                  onClick={[Function]}
                  title="Secondary"
                >
                  <span>
                    Secondary
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
          <a
            className="item"
            href="https://wwww.google.com/"
            key="TERTIARY"
            target="_blank"
          >
            <span>
              Google
            </span>
          </a>
        </div>
      </div>
    </SubNavigation>
  </Route>
</withRouter(SubNavigation)>
`;

exports[`<withRouter(SubNavigation) /> rendered correctly with loading fixture 1`] = `
<withRouter(SubNavigation)
  backRoute="/feedback"
  item={
    Object {
      "badge": "FREE",
      "items": Array [
        Object {
          "key": "MAIN",
          "label": "Main",
          "route": "/parent",
        },
        Object {
          "key": "SECONDARY",
          "label": "Secondary",
          "route": "/parent/secondary",
        },
        Object {
          "key": "TERTIARY",
          "label": "Google",
          "route": "https://wwww.google.com/",
        },
      ],
      "key": "PARENT",
      "label": "Parent",
      "route": "/parent",
      "title": "Parent title",
    }
  }
  locations={
    Array [
      Object {
        "label": "Location A",
        "value": "Location A",
      },
    ]
  }
  logoutRoute="/logout"
>
  <Route
    render={[Function]}
  >
    <SubNavigation
      backRoute="/feedback"
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "mocked",
              "pathname": "/feedback",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "mocked",
            "pathname": "/feedback",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      item={
        Object {
          "badge": "FREE",
          "items": Array [
            Object {
              "key": "MAIN",
              "label": "Main",
              "route": "/parent",
            },
            Object {
              "key": "SECONDARY",
              "label": "Secondary",
              "route": "/parent/secondary",
            },
            Object {
              "key": "TERTIARY",
              "label": "Google",
              "route": "https://wwww.google.com/",
            },
          ],
          "key": "PARENT",
          "label": "Parent",
          "route": "/parent",
          "title": "Parent title",
        }
      }
      loading={false}
      location={
        Object {
          "hash": "",
          "key": "mocked",
          "pathname": "/feedback",
          "search": "",
          "state": undefined,
        }
      }
      locations={
        Array [
          Object {
            "label": "Location A",
            "value": "Location A",
          },
        ]
      }
      logoutRoute="/logout"
      match={
        Object {
          "isExact": false,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
    >
      <div
        className="bar"
      >
        <div
          className="top"
        >
          <div
            className="heading"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="navBack"
              exact={true}
              to="/feedback"
            >
              <Route
                exact={true}
                path="/feedback"
              >
                <Link
                  aria-current="true"
                  className="navBack active"
                  replace={false}
                  style={Object {}}
                  to="/feedback"
                >
                  <a
                    aria-current="true"
                    className="navBack active"
                    href="/feedback"
                    onClick={[Function]}
                    style={Object {}}
                  >
                    <ArrowLeft
                      className="arrow"
                      fill="currentColor"
                      height={32}
                      width={32}
                    >
                      <svg
                        className="arrow"
                        fill="currentColor"
                        height={32}
                        viewBox="0 0 24 24"
                        width={32}
                      >
                        <path
                          d="M5.414 13H21a1 1 0 1 0 0-2H5.414l4.293-4.293a1 1 0 1 0-1.414-1.414l-6 6a1 1 0 0 0 0 1.414l6 6a1 1 0 0 0 1.414-1.414L5.414 13z"
                        />
                      </svg>
                    </ArrowLeft>
                  </a>
                </Link>
              </Route>
            </NavLink>
            <h2
              className="heading"
            >
              Parent title
            </h2>
          </div>
          <span
            className="control"
          >
            Location A
          </span>
          <span
            className="control logout"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="navLink"
              key="logout"
              target="_self"
              title="Logout"
              to="/logout"
            >
              <Route
                path="/logout"
              >
                <Link
                  aria-current={false}
                  className="navLink"
                  replace={false}
                  target="_self"
                  title="Logout"
                  to="/logout"
                >
                  <a
                    aria-current={false}
                    className="navLink"
                    href="/logout"
                    onClick={[Function]}
                    target="_self"
                    title="Logout"
                  >
                    <Logout
                      className="icon"
                      fill="currentColor"
                      height={32}
                      width={32}
                    >
                      <svg
                        className="icon"
                        fill="currentColor"
                        height={32}
                        viewBox="0 1 16 16"
                        width={32}
                      >
                        <path
                          d="M7.5 1.666c-.823 0-1.5.677-1.5 1.5v3h1v-3c0-.281.219-.5.5-.5h7c.281 0 .5.219.5.5v12c0 .281-.219.5-.5.5h-7a.493.493 0 0 1-.5-.5v-3H6v3c0 .823.677 1.5 1.5 1.5h7c.823 0 1.5-.677 1.5-1.5v-12c0-.823-.677-1.5-1.5-1.5h-7zM3.146 5.813L-.207 9.165l3.353 3.354.708-.707-2.147-2.147H11.5v-1H1.707L3.854 6.52l-.708-.707z"
                        />
                      </svg>
                    </Logout>
                    Logout
                  </a>
                </Link>
              </Route>
            </NavLink>
          </span>
        </div>
        <div
          className="items"
        >
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="MAIN"
            title="Main"
            to="/parent"
          >
            <Route
              exact={true}
              path="/parent"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Main"
                to="/parent"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent"
                  onClick={[Function]}
                  title="Main"
                >
                  <span>
                    Main
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="SECONDARY"
            title="Secondary"
            to="/parent/secondary"
          >
            <Route
              exact={true}
              path="/parent/secondary"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Secondary"
                to="/parent/secondary"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent/secondary"
                  onClick={[Function]}
                  title="Secondary"
                >
                  <span>
                    Secondary
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
          <a
            className="item"
            href="https://wwww.google.com/"
            key="TERTIARY"
            target="_blank"
          >
            <span>
              Google
            </span>
          </a>
        </div>
      </div>
    </SubNavigation>
  </Route>
</withRouter(SubNavigation)>
`;

exports[`<withRouter(SubNavigation) /> rendered correctly with multiPracticeNoChildren fixture 1`] = `
<withRouter(SubNavigation)
  backRoute="/feedback"
  item={
    Object {
      "badge": "FREE",
      "items": Array [
        Object {
          "key": "MAIN",
          "label": "Main",
          "route": "/parent",
        },
        Object {
          "key": "SECONDARY",
          "label": "Secondary",
          "route": "/parent/secondary",
        },
        Object {
          "key": "TERTIARY",
          "label": "Google",
          "route": "https://wwww.google.com/",
        },
      ],
      "key": "PARENT",
      "label": "Parent",
      "route": "/parent",
      "title": "Parent title",
    }
  }
  locations={
    Array [
      Object {
        "label": "Location A",
        "value": "Location A",
      },
    ]
  }
  logoutRoute="/logout"
>
  <Route
    render={[Function]}
  >
    <SubNavigation
      backRoute="/feedback"
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "mocked",
              "pathname": "/feedback",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "mocked",
            "pathname": "/feedback",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      item={
        Object {
          "badge": "FREE",
          "items": Array [
            Object {
              "key": "MAIN",
              "label": "Main",
              "route": "/parent",
            },
            Object {
              "key": "SECONDARY",
              "label": "Secondary",
              "route": "/parent/secondary",
            },
            Object {
              "key": "TERTIARY",
              "label": "Google",
              "route": "https://wwww.google.com/",
            },
          ],
          "key": "PARENT",
          "label": "Parent",
          "route": "/parent",
          "title": "Parent title",
        }
      }
      loading={false}
      location={
        Object {
          "hash": "",
          "key": "mocked",
          "pathname": "/feedback",
          "search": "",
          "state": undefined,
        }
      }
      locations={
        Array [
          Object {
            "label": "Location A",
            "value": "Location A",
          },
        ]
      }
      logoutRoute="/logout"
      match={
        Object {
          "isExact": false,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
    >
      <div
        className="bar"
      >
        <div
          className="top"
        >
          <div
            className="heading"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="navBack"
              exact={true}
              to="/feedback"
            >
              <Route
                exact={true}
                path="/feedback"
              >
                <Link
                  aria-current="true"
                  className="navBack active"
                  replace={false}
                  style={Object {}}
                  to="/feedback"
                >
                  <a
                    aria-current="true"
                    className="navBack active"
                    href="/feedback"
                    onClick={[Function]}
                    style={Object {}}
                  >
                    <ArrowLeft
                      className="arrow"
                      fill="currentColor"
                      height={32}
                      width={32}
                    >
                      <svg
                        className="arrow"
                        fill="currentColor"
                        height={32}
                        viewBox="0 0 24 24"
                        width={32}
                      >
                        <path
                          d="M5.414 13H21a1 1 0 1 0 0-2H5.414l4.293-4.293a1 1 0 1 0-1.414-1.414l-6 6a1 1 0 0 0 0 1.414l6 6a1 1 0 0 0 1.414-1.414L5.414 13z"
                        />
                      </svg>
                    </ArrowLeft>
                  </a>
                </Link>
              </Route>
            </NavLink>
            <h2
              className="heading"
            >
              Parent title
            </h2>
          </div>
          <span
            className="control"
          >
            Location A
          </span>
          <span
            className="control logout"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="navLink"
              key="logout"
              target="_self"
              title="Logout"
              to="/logout"
            >
              <Route
                path="/logout"
              >
                <Link
                  aria-current={false}
                  className="navLink"
                  replace={false}
                  target="_self"
                  title="Logout"
                  to="/logout"
                >
                  <a
                    aria-current={false}
                    className="navLink"
                    href="/logout"
                    onClick={[Function]}
                    target="_self"
                    title="Logout"
                  >
                    <Logout
                      className="icon"
                      fill="currentColor"
                      height={32}
                      width={32}
                    >
                      <svg
                        className="icon"
                        fill="currentColor"
                        height={32}
                        viewBox="0 1 16 16"
                        width={32}
                      >
                        <path
                          d="M7.5 1.666c-.823 0-1.5.677-1.5 1.5v3h1v-3c0-.281.219-.5.5-.5h7c.281 0 .5.219.5.5v12c0 .281-.219.5-.5.5h-7a.493.493 0 0 1-.5-.5v-3H6v3c0 .823.677 1.5 1.5 1.5h7c.823 0 1.5-.677 1.5-1.5v-12c0-.823-.677-1.5-1.5-1.5h-7zM3.146 5.813L-.207 9.165l3.353 3.354.708-.707-2.147-2.147H11.5v-1H1.707L3.854 6.52l-.708-.707z"
                        />
                      </svg>
                    </Logout>
                    Logout
                  </a>
                </Link>
              </Route>
            </NavLink>
          </span>
        </div>
        <div
          className="items"
        >
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="MAIN"
            title="Main"
            to="/parent"
          >
            <Route
              exact={true}
              path="/parent"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Main"
                to="/parent"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent"
                  onClick={[Function]}
                  title="Main"
                >
                  <span>
                    Main
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="SECONDARY"
            title="Secondary"
            to="/parent/secondary"
          >
            <Route
              exact={true}
              path="/parent/secondary"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Secondary"
                to="/parent/secondary"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent/secondary"
                  onClick={[Function]}
                  title="Secondary"
                >
                  <span>
                    Secondary
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
          <a
            className="item"
            href="https://wwww.google.com/"
            key="TERTIARY"
            target="_blank"
          >
            <span>
              Google
            </span>
          </a>
        </div>
      </div>
    </SubNavigation>
  </Route>
</withRouter(SubNavigation)>
`;

exports[`<withRouter(SubNavigation) /> rendered correctly with noChildren fixture 1`] = `
<withRouter(SubNavigation)
  backRoute="/feedback"
  item={
    Object {
      "badge": "FREE",
      "items": Array [
        Object {
          "key": "MAIN",
          "label": "Main",
          "route": "/parent",
        },
        Object {
          "key": "SECONDARY",
          "label": "Secondary",
          "route": "/parent/secondary",
        },
        Object {
          "key": "TERTIARY",
          "label": "Google",
          "route": "https://wwww.google.com/",
        },
      ],
      "key": "PARENT",
      "label": "Parent",
      "route": "/parent",
      "title": "Parent title",
    }
  }
  locations={
    Array [
      Object {
        "label": "Location A",
        "value": "Location A",
      },
    ]
  }
  logoutRoute="/logout"
>
  <Route
    render={[Function]}
  >
    <SubNavigation
      backRoute="/feedback"
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "mocked",
              "pathname": "/feedback",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "mocked",
            "pathname": "/feedback",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      item={
        Object {
          "badge": "FREE",
          "items": Array [
            Object {
              "key": "MAIN",
              "label": "Main",
              "route": "/parent",
            },
            Object {
              "key": "SECONDARY",
              "label": "Secondary",
              "route": "/parent/secondary",
            },
            Object {
              "key": "TERTIARY",
              "label": "Google",
              "route": "https://wwww.google.com/",
            },
          ],
          "key": "PARENT",
          "label": "Parent",
          "route": "/parent",
          "title": "Parent title",
        }
      }
      loading={false}
      location={
        Object {
          "hash": "",
          "key": "mocked",
          "pathname": "/feedback",
          "search": "",
          "state": undefined,
        }
      }
      locations={
        Array [
          Object {
            "label": "Location A",
            "value": "Location A",
          },
        ]
      }
      logoutRoute="/logout"
      match={
        Object {
          "isExact": false,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
    >
      <div
        className="bar"
      >
        <div
          className="top"
        >
          <div
            className="heading"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="navBack"
              exact={true}
              to="/feedback"
            >
              <Route
                exact={true}
                path="/feedback"
              >
                <Link
                  aria-current="true"
                  className="navBack active"
                  replace={false}
                  style={Object {}}
                  to="/feedback"
                >
                  <a
                    aria-current="true"
                    className="navBack active"
                    href="/feedback"
                    onClick={[Function]}
                    style={Object {}}
                  >
                    <ArrowLeft
                      className="arrow"
                      fill="currentColor"
                      height={32}
                      width={32}
                    >
                      <svg
                        className="arrow"
                        fill="currentColor"
                        height={32}
                        viewBox="0 0 24 24"
                        width={32}
                      >
                        <path
                          d="M5.414 13H21a1 1 0 1 0 0-2H5.414l4.293-4.293a1 1 0 1 0-1.414-1.414l-6 6a1 1 0 0 0 0 1.414l6 6a1 1 0 0 0 1.414-1.414L5.414 13z"
                        />
                      </svg>
                    </ArrowLeft>
                  </a>
                </Link>
              </Route>
            </NavLink>
            <h2
              className="heading"
            >
              Parent title
            </h2>
          </div>
          <span
            className="control"
          >
            Location A
          </span>
          <span
            className="control logout"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="navLink"
              key="logout"
              target="_self"
              title="Logout"
              to="/logout"
            >
              <Route
                path="/logout"
              >
                <Link
                  aria-current={false}
                  className="navLink"
                  replace={false}
                  target="_self"
                  title="Logout"
                  to="/logout"
                >
                  <a
                    aria-current={false}
                    className="navLink"
                    href="/logout"
                    onClick={[Function]}
                    target="_self"
                    title="Logout"
                  >
                    <Logout
                      className="icon"
                      fill="currentColor"
                      height={32}
                      width={32}
                    >
                      <svg
                        className="icon"
                        fill="currentColor"
                        height={32}
                        viewBox="0 1 16 16"
                        width={32}
                      >
                        <path
                          d="M7.5 1.666c-.823 0-1.5.677-1.5 1.5v3h1v-3c0-.281.219-.5.5-.5h7c.281 0 .5.219.5.5v12c0 .281-.219.5-.5.5h-7a.493.493 0 0 1-.5-.5v-3H6v3c0 .823.677 1.5 1.5 1.5h7c.823 0 1.5-.677 1.5-1.5v-12c0-.823-.677-1.5-1.5-1.5h-7zM3.146 5.813L-.207 9.165l3.353 3.354.708-.707-2.147-2.147H11.5v-1H1.707L3.854 6.52l-.708-.707z"
                        />
                      </svg>
                    </Logout>
                    Logout
                  </a>
                </Link>
              </Route>
            </NavLink>
          </span>
        </div>
        <div
          className="items"
        >
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="MAIN"
            title="Main"
            to="/parent"
          >
            <Route
              exact={true}
              path="/parent"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Main"
                to="/parent"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent"
                  onClick={[Function]}
                  title="Main"
                >
                  <span>
                    Main
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="SECONDARY"
            title="Secondary"
            to="/parent/secondary"
          >
            <Route
              exact={true}
              path="/parent/secondary"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Secondary"
                to="/parent/secondary"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent/secondary"
                  onClick={[Function]}
                  title="Secondary"
                >
                  <span>
                    Secondary
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
          <a
            className="item"
            href="https://wwww.google.com/"
            key="TERTIARY"
            target="_blank"
          >
            <span>
              Google
            </span>
          </a>
        </div>
      </div>
    </SubNavigation>
  </Route>
</withRouter(SubNavigation)>
`;

exports[`<withRouter(SubNavigation) /> rendered correctly with noItem fixture 1`] = `
<withRouter(SubNavigation)
  backRoute="/feedback"
  item={
    Object {
      "badge": "FREE",
      "items": Array [
        Object {
          "key": "MAIN",
          "label": "Main",
          "route": "/parent",
        },
        Object {
          "key": "SECONDARY",
          "label": "Secondary",
          "route": "/parent/secondary",
        },
        Object {
          "key": "TERTIARY",
          "label": "Google",
          "route": "https://wwww.google.com/",
        },
      ],
      "key": "PARENT",
      "label": "Parent",
      "route": "/parent",
      "title": "Parent title",
    }
  }
  locations={
    Array [
      Object {
        "label": "Location A",
        "value": "Location A",
      },
    ]
  }
  logoutRoute="/logout"
>
  <Route
    render={[Function]}
  >
    <SubNavigation
      backRoute="/feedback"
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "mocked",
              "pathname": "/feedback",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "mocked",
            "pathname": "/feedback",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      item={
        Object {
          "badge": "FREE",
          "items": Array [
            Object {
              "key": "MAIN",
              "label": "Main",
              "route": "/parent",
            },
            Object {
              "key": "SECONDARY",
              "label": "Secondary",
              "route": "/parent/secondary",
            },
            Object {
              "key": "TERTIARY",
              "label": "Google",
              "route": "https://wwww.google.com/",
            },
          ],
          "key": "PARENT",
          "label": "Parent",
          "route": "/parent",
          "title": "Parent title",
        }
      }
      loading={false}
      location={
        Object {
          "hash": "",
          "key": "mocked",
          "pathname": "/feedback",
          "search": "",
          "state": undefined,
        }
      }
      locations={
        Array [
          Object {
            "label": "Location A",
            "value": "Location A",
          },
        ]
      }
      logoutRoute="/logout"
      match={
        Object {
          "isExact": false,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
    >
      <div
        className="bar"
      >
        <div
          className="top"
        >
          <div
            className="heading"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="navBack"
              exact={true}
              to="/feedback"
            >
              <Route
                exact={true}
                path="/feedback"
              >
                <Link
                  aria-current="true"
                  className="navBack active"
                  replace={false}
                  style={Object {}}
                  to="/feedback"
                >
                  <a
                    aria-current="true"
                    className="navBack active"
                    href="/feedback"
                    onClick={[Function]}
                    style={Object {}}
                  >
                    <ArrowLeft
                      className="arrow"
                      fill="currentColor"
                      height={32}
                      width={32}
                    >
                      <svg
                        className="arrow"
                        fill="currentColor"
                        height={32}
                        viewBox="0 0 24 24"
                        width={32}
                      >
                        <path
                          d="M5.414 13H21a1 1 0 1 0 0-2H5.414l4.293-4.293a1 1 0 1 0-1.414-1.414l-6 6a1 1 0 0 0 0 1.414l6 6a1 1 0 0 0 1.414-1.414L5.414 13z"
                        />
                      </svg>
                    </ArrowLeft>
                  </a>
                </Link>
              </Route>
            </NavLink>
            <h2
              className="heading"
            >
              Parent title
            </h2>
          </div>
          <span
            className="control"
          >
            Location A
          </span>
          <span
            className="control logout"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="navLink"
              key="logout"
              target="_self"
              title="Logout"
              to="/logout"
            >
              <Route
                path="/logout"
              >
                <Link
                  aria-current={false}
                  className="navLink"
                  replace={false}
                  target="_self"
                  title="Logout"
                  to="/logout"
                >
                  <a
                    aria-current={false}
                    className="navLink"
                    href="/logout"
                    onClick={[Function]}
                    target="_self"
                    title="Logout"
                  >
                    <Logout
                      className="icon"
                      fill="currentColor"
                      height={32}
                      width={32}
                    >
                      <svg
                        className="icon"
                        fill="currentColor"
                        height={32}
                        viewBox="0 1 16 16"
                        width={32}
                      >
                        <path
                          d="M7.5 1.666c-.823 0-1.5.677-1.5 1.5v3h1v-3c0-.281.219-.5.5-.5h7c.281 0 .5.219.5.5v12c0 .281-.219.5-.5.5h-7a.493.493 0 0 1-.5-.5v-3H6v3c0 .823.677 1.5 1.5 1.5h7c.823 0 1.5-.677 1.5-1.5v-12c0-.823-.677-1.5-1.5-1.5h-7zM3.146 5.813L-.207 9.165l3.353 3.354.708-.707-2.147-2.147H11.5v-1H1.707L3.854 6.52l-.708-.707z"
                        />
                      </svg>
                    </Logout>
                    Logout
                  </a>
                </Link>
              </Route>
            </NavLink>
          </span>
        </div>
        <div
          className="items"
        >
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="MAIN"
            title="Main"
            to="/parent"
          >
            <Route
              exact={true}
              path="/parent"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Main"
                to="/parent"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent"
                  onClick={[Function]}
                  title="Main"
                >
                  <span>
                    Main
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="SECONDARY"
            title="Secondary"
            to="/parent/secondary"
          >
            <Route
              exact={true}
              path="/parent/secondary"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Secondary"
                to="/parent/secondary"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent/secondary"
                  onClick={[Function]}
                  title="Secondary"
                >
                  <span>
                    Secondary
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
          <a
            className="item"
            href="https://wwww.google.com/"
            key="TERTIARY"
            target="_blank"
          >
            <span>
              Google
            </span>
          </a>
        </div>
      </div>
    </SubNavigation>
  </Route>
</withRouter(SubNavigation)>
`;

exports[`<withRouter(SubNavigation) /> rendered correctly with onePractice fixture 1`] = `
<withRouter(SubNavigation)
  backRoute="/feedback"
  item={
    Object {
      "badge": "FREE",
      "items": Array [
        Object {
          "key": "MAIN",
          "label": "Main",
          "route": "/parent",
        },
        Object {
          "key": "SECONDARY",
          "label": "Secondary",
          "route": "/parent/secondary",
        },
        Object {
          "key": "TERTIARY",
          "label": "Google",
          "route": "https://wwww.google.com/",
        },
      ],
      "key": "PARENT",
      "label": "Parent",
      "route": "/parent",
      "title": "Parent title",
    }
  }
  locations={
    Array [
      Object {
        "label": "Location A",
        "value": "Location A",
      },
    ]
  }
  logoutRoute="/logout"
>
  <Route
    render={[Function]}
  >
    <SubNavigation
      backRoute="/feedback"
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "mocked",
              "pathname": "/feedback",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "mocked",
            "pathname": "/feedback",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      item={
        Object {
          "badge": "FREE",
          "items": Array [
            Object {
              "key": "MAIN",
              "label": "Main",
              "route": "/parent",
            },
            Object {
              "key": "SECONDARY",
              "label": "Secondary",
              "route": "/parent/secondary",
            },
            Object {
              "key": "TERTIARY",
              "label": "Google",
              "route": "https://wwww.google.com/",
            },
          ],
          "key": "PARENT",
          "label": "Parent",
          "route": "/parent",
          "title": "Parent title",
        }
      }
      loading={false}
      location={
        Object {
          "hash": "",
          "key": "mocked",
          "pathname": "/feedback",
          "search": "",
          "state": undefined,
        }
      }
      locations={
        Array [
          Object {
            "label": "Location A",
            "value": "Location A",
          },
        ]
      }
      logoutRoute="/logout"
      match={
        Object {
          "isExact": false,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
    >
      <div
        className="bar"
      >
        <div
          className="top"
        >
          <div
            className="heading"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="navBack"
              exact={true}
              to="/feedback"
            >
              <Route
                exact={true}
                path="/feedback"
              >
                <Link
                  aria-current="true"
                  className="navBack active"
                  replace={false}
                  style={Object {}}
                  to="/feedback"
                >
                  <a
                    aria-current="true"
                    className="navBack active"
                    href="/feedback"
                    onClick={[Function]}
                    style={Object {}}
                  >
                    <ArrowLeft
                      className="arrow"
                      fill="currentColor"
                      height={32}
                      width={32}
                    >
                      <svg
                        className="arrow"
                        fill="currentColor"
                        height={32}
                        viewBox="0 0 24 24"
                        width={32}
                      >
                        <path
                          d="M5.414 13H21a1 1 0 1 0 0-2H5.414l4.293-4.293a1 1 0 1 0-1.414-1.414l-6 6a1 1 0 0 0 0 1.414l6 6a1 1 0 0 0 1.414-1.414L5.414 13z"
                        />
                      </svg>
                    </ArrowLeft>
                  </a>
                </Link>
              </Route>
            </NavLink>
            <h2
              className="heading"
            >
              Parent title
            </h2>
          </div>
          <span
            className="control"
          >
            Location A
          </span>
          <span
            className="control logout"
          >
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="navLink"
              key="logout"
              target="_self"
              title="Logout"
              to="/logout"
            >
              <Route
                path="/logout"
              >
                <Link
                  aria-current={false}
                  className="navLink"
                  replace={false}
                  target="_self"
                  title="Logout"
                  to="/logout"
                >
                  <a
                    aria-current={false}
                    className="navLink"
                    href="/logout"
                    onClick={[Function]}
                    target="_self"
                    title="Logout"
                  >
                    <Logout
                      className="icon"
                      fill="currentColor"
                      height={32}
                      width={32}
                    >
                      <svg
                        className="icon"
                        fill="currentColor"
                        height={32}
                        viewBox="0 1 16 16"
                        width={32}
                      >
                        <path
                          d="M7.5 1.666c-.823 0-1.5.677-1.5 1.5v3h1v-3c0-.281.219-.5.5-.5h7c.281 0 .5.219.5.5v12c0 .281-.219.5-.5.5h-7a.493.493 0 0 1-.5-.5v-3H6v3c0 .823.677 1.5 1.5 1.5h7c.823 0 1.5-.677 1.5-1.5v-12c0-.823-.677-1.5-1.5-1.5h-7zM3.146 5.813L-.207 9.165l3.353 3.354.708-.707-2.147-2.147H11.5v-1H1.707L3.854 6.52l-.708-.707z"
                        />
                      </svg>
                    </Logout>
                    Logout
                  </a>
                </Link>
              </Route>
            </NavLink>
          </span>
        </div>
        <div
          className="items"
        >
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="MAIN"
            title="Main"
            to="/parent"
          >
            <Route
              exact={true}
              path="/parent"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Main"
                to="/parent"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent"
                  onClick={[Function]}
                  title="Main"
                >
                  <span>
                    Main
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="item"
            exact={true}
            key="SECONDARY"
            title="Secondary"
            to="/parent/secondary"
          >
            <Route
              exact={true}
              path="/parent/secondary"
            >
              <Link
                aria-current={false}
                className="item"
                replace={false}
                title="Secondary"
                to="/parent/secondary"
              >
                <a
                  aria-current={false}
                  className="item"
                  href="/parent/secondary"
                  onClick={[Function]}
                  title="Secondary"
                >
                  <span>
                    Secondary
                  </span>
                </a>
              </Link>
            </Route>
          </NavLink>
          <a
            className="item"
            href="https://wwww.google.com/"
            key="TERTIARY"
            target="_blank"
          >
            <span>
              Google
            </span>
          </a>
        </div>
      </div>
    </SubNavigation>
  </Route>
</withRouter(SubNavigation)>
`;
